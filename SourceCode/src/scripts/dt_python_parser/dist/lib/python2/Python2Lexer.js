"use strict";

// Generated from /Users/ziv/github.com/dt-python-parser/src/grammar/python2/Python2.g4 by ANTLR 4.7.2
// jshint ignore: start
var antlr4 = require('antlr4/index');
var Python2Parser = require('./Python2Parser').Python2Parser;
var CommonToken = require('antlr4').CommonToken;
var IndentStack = /*#__PURE__*/function () {
  function IndentStack() {
    this._s = [];
  }
  var _proto = IndentStack.prototype;
  _proto.empty = function empty() {
    return this._s.length === 0;
  };
  _proto.push = function push(wsval) {
    this._s.push(wsval);
  };
  _proto.pop = function pop() {
    this._s.pop();
  };
  _proto.wsval = function wsval() {
    if (this._s.length) return this._s[this._s.length - 1];else return 0;
  };
  return IndentStack;
}();
var TokenQueue = /*#__PURE__*/function () {
  function TokenQueue() {
    this._q = [];
  }
  var _proto2 = TokenQueue.prototype;
  _proto2.empty = function empty() {
    return this._q.length === 0;
  };
  _proto2.enq = function enq(t) {
    this._q.push(t);
  };
  _proto2.deq = function deq() {
    return this._q.shift();
  };
  return TokenQueue;
}();
function ord(char) {
  return char.charCodeAt();
}
var serializedATN = ["\x03\u608B\uA72A\u8133\uB9ED\u417C\u3BE7\u7786\u5964", "\x02T\u02B3\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04", "\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04\x07\t", "\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\x0B\t\x0B\x04", "\f\t\f\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10", "\t\x10\x04\x11\t\x11\x04\x12\t\x12\x04\x13\t\x13", "\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17", "\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A", "\x04\x1B\t\x1B\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E", "\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04#", "\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04", "*\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x04", "1\t1\x042\t2\x043\t3\x044\t4\x045\t5\x046\t6\x047\t7\x04", "8\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04=\t=\x04>\t>\x04", "?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04", "F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04", "M\tM\x04N\tN\x04O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x03", "\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03", "\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03", "\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\n\x03", "\n\x03\n\x03\x0B\x03\x0B\x03\x0B\x03\f\x03\f\x03", "\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03", "\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03", "\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03", "\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03", "\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03", "\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03", "\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03", "\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03", "\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03", "\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03", "\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03", "\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03", "\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03", "\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03", "\x1F\x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03", "!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03", "#\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03", "%\x03&\x03&\x03&\x03&\x03&\x03'\x03'\x03'\x03'", "\x03'\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03", ")\x03)\x03*\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03", "+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03-\x03", "-\x03-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03", ".\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x030\x03", "1\x031\x031\x031\x032\x032\x033\x033\x034\x034\x03", "4\x035\x035\x035\x036\x036\x036\x037\x037\x037\x03", "8\x038\x038\x039\x039\x039\x03:\x03:\x03;\x03;\x03", "<\x03<\x03=\x03=\x03=\x03>\x03>\x03?\x03?\x03@\x03", "@\x03A\x03A\x03B\x03B\x03B\x03C\x03C\x03D\x03D\x03", "E\x03E\x03E\x03E\x03E\x03E\x03F\x03F\x03F\x03F\x03", "F\x03F\x03G\x03G\x07G\u01AF\nG\fG\x0EG\u01B2\x0BG\x03", "H\x03H\x03H\x06H\u01B7\nH\rH\x0EH\u01B8\x03H\x03H\x03", "H\x05H\u01BE\nH\x03H\x06H\u01C1\nH\rH\x0EH\u01C2\x05H\u01C5", "\nH\x03H\x03H\x06H\u01C9\nH\rH\x0EH\u01CA\x03H\x05H\u01CE", "\nH\x03H\x03H\x06H\u01D2\nH\rH\x0EH\u01D3\x03H\x05H\u01D7", "\nH\x05H\u01D9\nH\x03H\x06H\u01DC\nH\rH\x0EH\u01DD\x03H\x03", "H\x07H\u01E2\nH\fH\x0EH\u01E5\x0BH\x03H\x03H\x06H\u01E9", "\nH\rH\x0EH\u01EA\x05H\u01ED\nH\x03H\x03H\x05H\u01F1\nH\x03", "H\x06H\u01F4\nH\rH\x0EH\u01F5\x05H\u01F8\nH\x03H\x05H\u01FB", "\nH\x03H\x06H\u01FE\nH\rH\x0EH\u01FF\x03H\x03H\x03H\x05", "H\u0205\nH\x03H\x06H\u0208\nH\rH\x0EH\u0209\x03H\x05H\u020D", "\nH\x03H\x05H\u0210\nH\x05H\u0212\nH\x03I\x05I\u0215\nI\x03", "I\x05I\u0218\nI\x03I\x05I\u021B\nI\x03I\x05I\u021E\nI\x05", "I\u0220\nI\x03I\x03I\x03I\x06I\u0225\nI\rI\x0EI\u0226\x03", "I\x05I\u022A\nI\x03I\x05I\u022D\nI\x03I\x05I\u0230\nI\x03", "I\x07I\u0233\nI\fI\x0EI\u0236\x0BI\x03I\x03I\x03I\x03", "I\x06I\u023C\nI\rI\x0EI\u023D\x03I\x05I\u0241\nI\x03I\x05", "I\u0244\nI\x03I\x05I\u0247\nI\x03I\x07I\u024A\nI\fI\x0EI\u024D", "\x0BI\x03I\x03I\x03I\x03I\x03I\x03I\x03I\x03I\x07", "I\u0257\nI\fI\x0EI\u025A\x0BI\x03I\x03I\x03I\x03I\x03", "I\x03I\x03I\x03I\x03I\x03I\x07I\u0266\nI\fI\x0EI\u0269", "\x0BI\x03I\x03I\x03I\x05I\u026E\nI\x03J\x05J\u0271\nJ", "\x03J\x06J\u0274\nJ\rJ\x0EJ\u0275\x03J\x03J\x03J\x07J", "\u027B\nJ\fJ\x0EJ\u027E\x0BJ\x03J\x05J\u0281\nJ\x03J\x03", "J\x03J\x05J\u0286\nJ\x03J\x03J\x03J\x03J\x03K\x06K\u028D", "\nK\rK\x0EK\u028E\x03K\x03K\x03K\x03K\x03L\x03L\x07", "L\u0297\nL\fL\x0EL\u029A\x0BL\x03L\x03L\x03M\x03M\x03", "M\x03N\x03N\x03N\x03O\x03O\x03O\x03P\x03P\x03P\x03", "Q\x03Q\x03Q\x03R\x03R\x03R\x03S\x03S\x03S\x03S\x04", "\u0258\u0267\x02T\x03\x03\x05\x04\x07\x05\t\x06\x0B", "\x07\r\b\x0F\t\x11\n\x13\x0B\x15\f\x17\r\x19\x0E\x1B", "\x0F\x1D\x10\x1F\x11!\x12#\x13%\x14'\x15)\x16+", "\x17-\x18/\x191\x1A3\x1B5\x1C7\x1D9\x1E;\x1F= ?!A", "\"C#E$G%I&K'M(O)Q*S+U,W-Y.[/]0_1a2c3e4g5i6k7m8o9q:s;u<w=y>{?}@\x7F", "A\x81B\x83C\x85D\x87E\x89F\x8BG\x8DH\x8FI\x91J\x93", "K\x95L\x97M\x99N\x9BO\x9DP\x9FQ\xA1R\xA3S\xA5T\x03", "\x02\x16\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02ZZz", "z\x05\x022;CHch\x04\x02NNnn\x04\x02GGgg\x04\x02--//", "\x03\x022;\x04\x02QQqq\x03\x0229\x04\x02DDdd\x03\x02", "23\x04\x02LLll\x06\x02DDWWddww\x04\x02TTtt\x04\x02\x0B", "\x0B\"\"\x06\x02\f\f\x0F\x0F))^^\x06\x02\f\f\x0F\x0F", "$$^^\x03\x02^^\x04\x02\f\f\x0F\x0F\x02\u02EE\x02\x03", "\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07", "\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\x0B", "\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F", "\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13", "\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17", "\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B", "\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F", "\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03", "\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02", "\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02", "\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02", "\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02", "5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03", "\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02", "\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02", "\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02", "\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02", "K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03", "\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02", "\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02", "\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02", "\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02", "a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03", "\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02", "\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02", "\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02", "\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02", "w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03", "\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03", "\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03", "\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02\x87\x03", "\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03", "\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x8F\x03", "\x02\x02\x02\x02\x91\x03\x02\x02\x02\x02\x93\x03", "\x02\x02\x02\x02\x95\x03\x02\x02\x02\x02\x97\x03", "\x02\x02\x02\x02\x99\x03\x02\x02\x02\x02\x9B\x03", "\x02\x02\x02\x02\x9D\x03\x02\x02\x02\x02\x9F\x03", "\x02\x02\x02\x02\xA1\x03\x02\x02\x02\x02\xA3\x03", "\x02\x02\x02\x02\xA5\x03\x02\x02\x02\x03\xA7\x03", "\x02\x02\x02\x05\xA9\x03\x02\x02\x02\x07\xAD\x03", "\x02\x02\x02\t\xAF\x03\x02\x02\x02\x0B\xB1\x03", "\x02\x02\x02\r\xB3\x03\x02\x02\x02\x0F\xB5\x03", "\x02\x02\x02\x11\xB8\x03\x02\x02\x02\x13\xBA\x03", "\x02\x02\x02\x15\xBD\x03\x02\x02\x02\x17\xC0\x03", "\x02\x02\x02\x19\xC3\x03\x02\x02\x02\x1B\xC6\x03", "\x02\x02\x02\x1D\xC9\x03\x02\x02\x02\x1F\xCC\x03", "\x02\x02\x02!\xCF\x03\x02\x02\x02#\xD2\x03\x02", "\x02\x02%\xD6\x03\x02\x02\x02'\xDA\x03\x02\x02", "\x02)\xDE\x03\x02\x02\x02+\xE2\x03\x02\x02\x02", "-\xE5\x03\x02\x02\x02/\xE9\x03\x02\x02\x021\xEE", "\x03\x02\x02\x023\xF4\x03\x02\x02\x025\xFD\x03", "\x02\x02\x027\u0104\x03\x02\x02\x029\u010A\x03\x02", "\x02\x02;\u0111\x03\x02\x02\x02=\u0116\x03\x02\x02", "\x02?\u0118\x03\x02\x02\x02A\u011B\x03\x02\x02\x02", "C\u0122\x03\x02\x02\x02E\u0127\x03\x02\x02\x02G\u012A", "\x03\x02\x02\x02I\u0131\x03\x02\x02\x02K\u0134\x03", "\x02\x02\x02M\u0139\x03\x02\x02\x02O\u013E\x03\x02", "\x02\x02Q\u0144\x03\x02\x02\x02S\u0148\x03\x02\x02", "\x02U\u014C\x03\x02\x02\x02W\u0154\x03\x02\x02\x02", "Y\u0159\x03\x02\x02\x02[\u0160\x03\x02\x02\x02]\u0167", "\x03\x02\x02\x02_\u016A\x03\x02\x02\x02a\u016E\x03", "\x02\x02\x02c\u0172\x03\x02\x02\x02e\u0174\x03\x02", "\x02\x02g\u0176\x03\x02\x02\x02i\u0179\x03\x02\x02", "\x02k\u017C\x03\x02\x02\x02m\u017F\x03\x02\x02\x02", "o\u0182\x03\x02\x02\x02q\u0185\x03\x02\x02\x02s\u0188", "\x03\x02\x02\x02u\u018A\x03\x02\x02\x02w\u018C\x03", "\x02\x02\x02y\u018E\x03\x02\x02\x02{\u0191\x03\x02", "\x02\x02}\u0193\x03\x02\x02\x02\x7F\u0195\x03\x02", "\x02\x02\x81\u0197\x03\x02\x02\x02\x83\u0199\x03\x02", "\x02\x02\x85\u019C\x03\x02\x02\x02\x87\u019E\x03\x02", "\x02\x02\x89\u01A0\x03\x02\x02\x02\x8B\u01A6\x03\x02", "\x02\x02\x8D\u01AC\x03\x02\x02\x02\x8F\u0211\x03\x02", "\x02\x02\x91\u021F\x03\x02\x02\x02\x93\u0285\x03\x02", "\x02\x02\x95\u028C\x03\x02\x02\x02\x97\u0294\x03\x02", "\x02\x02\x99\u029D\x03\x02\x02\x02\x9B\u02A0\x03\x02", "\x02\x02\x9D\u02A3\x03\x02\x02\x02\x9F\u02A6\x03\x02", "\x02\x02\xA1\u02A9\x03\x02\x02\x02\xA3\u02AC\x03\x02", "\x02\x02\xA5\u02AF\x03\x02\x02\x02\xA7\xA8\x07B", "\x02\x02\xA8\x04\x03\x02\x02\x02\xA9\xAA\x07f", "\x02\x02\xAA\xAB\x07g\x02\x02\xAB\xAC\x07h\x02", "\x02\xAC\x06\x03\x02\x02\x02\xAD\xAE\x07<\x02", "\x02\xAE\b\x03\x02\x02\x02\xAF\xB0\x07?\x02\x02", "\xB0\n\x03\x02\x02\x02\xB1\xB2\x07.\x02\x02\xB2", "\f\x03\x02\x02\x02\xB3\xB4\x07,\x02\x02\xB4\x0E", "\x03\x02\x02\x02\xB5\xB6\x07,\x02\x02\xB6\xB7", "\x07,\x02\x02\xB7\x10\x03\x02\x02\x02\xB8\xB9", "\x07=\x02\x02\xB9\x12\x03\x02\x02\x02\xBA\xBB", "\x07-\x02\x02\xBB\xBC\x07?\x02\x02\xBC\x14\x03", "\x02\x02\x02\xBD\xBE\x07/\x02\x02\xBE\xBF\x07", "?\x02\x02\xBF\x16\x03\x02\x02\x02\xC0\xC1\x07", ",\x02\x02\xC1\xC2\x07?\x02\x02\xC2\x18\x03\x02", "\x02\x02\xC3\xC4\x071\x02\x02\xC4\xC5\x07?\x02", "\x02\xC5\x1A\x03\x02\x02\x02\xC6\xC7\x07'\x02", "\x02\xC7\xC8\x07?\x02\x02\xC8\x1C\x03\x02\x02", "\x02\xC9\xCA\x07(\x02\x02\xCA\xCB\x07?\x02\x02", "\xCB\x1E\x03\x02\x02\x02\xCC\xCD\x07~\x02\x02", "\xCD\xCE\x07?\x02\x02\xCE \x03\x02\x02\x02\xCF", "\xD0\x07`\x02\x02\xD0\xD1\x07?\x02\x02\xD1\"\x03", "\x02\x02\x02\xD2\xD3\x07>\x02\x02\xD3\xD4\x07", ">\x02\x02\xD4\xD5\x07?\x02\x02\xD5$\x03\x02\x02", "\x02\xD6\xD7\x07@\x02\x02\xD7\xD8\x07@\x02\x02", "\xD8\xD9\x07?\x02\x02\xD9&\x03\x02\x02\x02\xDA", "\xDB\x07,\x02\x02\xDB\xDC\x07,\x02\x02\xDC\xDD", "\x07?\x02\x02\xDD(\x03\x02\x02\x02\xDE\xDF\x07", "1\x02\x02\xDF\xE0\x071\x02\x02\xE0\xE1\x07?\x02", "\x02\xE1*\x03\x02\x02\x02\xE2\xE3\x07@\x02\x02", "\xE3\xE4\x07@\x02\x02\xE4,\x03\x02\x02\x02\xE5", "\xE6\x07f\x02\x02\xE6\xE7\x07g\x02\x02\xE7\xE8", "\x07n\x02\x02\xE8.\x03\x02\x02\x02\xE9\xEA\x07", "r\x02\x02\xEA\xEB\x07c\x02\x02\xEB\xEC\x07u\x02", "\x02\xEC\xED\x07u\x02\x02\xED0\x03\x02\x02\x02", "\xEE\xEF\x07d\x02\x02\xEF\xF0\x07t\x02\x02\xF0", "\xF1\x07g\x02\x02\xF1\xF2\x07c\x02\x02\xF2\xF3", "\x07m\x02\x02\xF32\x03\x02\x02\x02\xF4\xF5\x07", "e\x02\x02\xF5\xF6\x07q\x02\x02\xF6\xF7\x07p\x02", "\x02\xF7\xF8\x07v\x02\x02\xF8\xF9\x07k\x02\x02", "\xF9\xFA\x07p\x02\x02\xFA\xFB\x07w\x02\x02\xFB", "\xFC\x07g\x02\x02\xFC4\x03\x02\x02\x02\xFD\xFE", "\x07t\x02\x02\xFE\xFF\x07g\x02\x02\xFF\u0100\x07", "v\x02\x02\u0100\u0101\x07w\x02\x02\u0101\u0102\x07t\x02", "\x02\u0102\u0103\x07p\x02\x02\u01036\x03\x02\x02\x02", "\u0104\u0105\x07t\x02\x02\u0105\u0106\x07c\x02\x02\u0106", "\u0107\x07k\x02\x02\u0107\u0108\x07u\x02\x02\u0108\u0109", "\x07g\x02\x02\u01098\x03\x02\x02\x02\u010A\u010B\x07", "k\x02\x02\u010B\u010C\x07o\x02\x02\u010C\u010D\x07r\x02", "\x02\u010D\u010E\x07q\x02\x02\u010E\u010F\x07t\x02\x02", "\u010F\u0110\x07v\x02\x02\u0110:\x03\x02\x02\x02\u0111", "\u0112\x07h\x02\x02\u0112\u0113\x07t\x02\x02\u0113\u0114", "\x07q\x02\x02\u0114\u0115\x07o\x02\x02\u0115<\x03\x02", "\x02\x02\u0116\u0117\x070\x02\x02\u0117>\x03\x02\x02", "\x02\u0118\u0119\x07c\x02\x02\u0119\u011A\x07u\x02\x02", "\u011A@\x03\x02\x02\x02\u011B\u011C\x07i\x02\x02\u011C", "\u011D\x07n\x02\x02\u011D\u011E\x07q\x02\x02\u011E\u011F", "\x07d\x02\x02\u011F\u0120\x07c\x02\x02\u0120\u0121\x07", "n\x02\x02\u0121B\x03\x02\x02\x02\u0122\u0123\x07g\x02", "\x02\u0123\u0124\x07z\x02\x02\u0124\u0125\x07g\x02\x02", "\u0125\u0126\x07e\x02\x02\u0126D\x03\x02\x02\x02\u0127", "\u0128\x07k\x02\x02\u0128\u0129\x07p\x02\x02\u0129F\x03", "\x02\x02\x02\u012A\u012B\x07c\x02\x02\u012B\u012C\x07", "u\x02\x02\u012C\u012D\x07u\x02\x02\u012D\u012E\x07g\x02", "\x02\u012E\u012F\x07t\x02\x02\u012F\u0130\x07v\x02\x02", "\u0130H\x03\x02\x02\x02\u0131\u0132\x07k\x02\x02\u0132", "\u0133\x07h\x02\x02\u0133J\x03\x02\x02\x02\u0134\u0135", "\x07g\x02\x02\u0135\u0136\x07n\x02\x02\u0136\u0137\x07", "k\x02\x02\u0137\u0138\x07h\x02\x02\u0138L\x03\x02\x02", "\x02\u0139\u013A\x07g\x02\x02\u013A\u013B\x07n\x02\x02", "\u013B\u013C\x07u\x02\x02\u013C\u013D\x07g\x02\x02\u013D", "N\x03\x02\x02\x02\u013E\u013F\x07y\x02\x02\u013F\u0140", "\x07j\x02\x02\u0140\u0141\x07k\x02\x02\u0141\u0142\x07", "n\x02\x02\u0142\u0143\x07g\x02\x02\u0143P\x03\x02\x02", "\x02\u0144\u0145\x07h\x02\x02\u0145\u0146\x07q\x02\x02", "\u0146\u0147\x07t\x02\x02\u0147R\x03\x02\x02\x02\u0148", "\u0149\x07v\x02\x02\u0149\u014A\x07t\x02\x02\u014A\u014B", "\x07{\x02\x02\u014BT\x03\x02\x02\x02\u014C\u014D\x07", "h\x02\x02\u014D\u014E\x07k\x02\x02\u014E\u014F\x07p\x02", "\x02\u014F\u0150\x07c\x02\x02\u0150\u0151\x07n\x02\x02", "\u0151\u0152\x07n\x02\x02\u0152\u0153\x07{\x02\x02\u0153", "V\x03\x02\x02\x02\u0154\u0155\x07y\x02\x02\u0155\u0156", "\x07k\x02\x02\u0156\u0157\x07v\x02\x02\u0157\u0158\x07", "j\x02\x02\u0158X\x03\x02\x02\x02\u0159\u015A\x07g\x02", "\x02\u015A\u015B\x07z\x02\x02\u015B\u015C\x07e\x02\x02", "\u015C\u015D\x07g\x02\x02\u015D\u015E\x07r\x02\x02\u015E", "\u015F\x07v\x02\x02\u015FZ\x03\x02\x02\x02\u0160\u0161", "\x07n\x02\x02\u0161\u0162\x07c\x02\x02\u0162\u0163\x07", "o\x02\x02\u0163\u0164\x07d\x02\x02\u0164\u0165\x07f\x02", "\x02\u0165\u0166\x07c\x02\x02\u0166\\\x03\x02\x02\x02", "\u0167\u0168\x07q\x02\x02\u0168\u0169\x07t\x02\x02\u0169", "^\x03\x02\x02\x02\u016A\u016B\x07c\x02\x02\u016B\u016C", "\x07p\x02\x02\u016C\u016D\x07f\x02\x02\u016D`\x03\x02", "\x02\x02\u016E\u016F\x07p\x02\x02\u016F\u0170\x07q\x02", "\x02\u0170\u0171\x07v\x02\x02\u0171b\x03\x02\x02\x02", "\u0172\u0173\x07>\x02\x02\u0173d\x03\x02\x02\x02\u0174", "\u0175\x07@\x02\x02\u0175f\x03\x02\x02\x02\u0176\u0177", "\x07?\x02\x02\u0177\u0178\x07?\x02\x02\u0178h\x03\x02", "\x02\x02\u0179\u017A\x07@\x02\x02\u017A\u017B\x07?\x02", "\x02\u017Bj\x03\x02\x02\x02\u017C\u017D\x07>\x02\x02", "\u017D\u017E\x07?\x02\x02\u017El\x03\x02\x02\x02\u017F", "\u0180\x07>\x02\x02\u0180\u0181\x07@\x02\x02\u0181n\x03", "\x02\x02\x02\u0182\u0183\x07#\x02\x02\u0183\u0184\x07", "?\x02\x02\u0184p\x03\x02\x02\x02\u0185\u0186\x07k\x02", "\x02\u0186\u0187\x07u\x02\x02\u0187r\x03\x02\x02\x02", "\u0188\u0189\x07~\x02\x02\u0189t\x03\x02\x02\x02\u018A", "\u018B\x07`\x02\x02\u018Bv\x03\x02\x02\x02\u018C\u018D", "\x07(\x02\x02\u018Dx\x03\x02\x02\x02\u018E\u018F\x07", ">\x02\x02\u018F\u0190\x07>\x02\x02\u0190z\x03\x02\x02", "\x02\u0191\u0192\x07-\x02\x02\u0192|\x03\x02\x02\x02", "\u0193\u0194\x07/\x02\x02\u0194~\x03\x02\x02\x02\u0195", "\u0196\x071\x02\x02\u0196\x80\x03\x02\x02\x02\u0197", "\u0198\x07'\x02\x02\u0198\x82\x03\x02\x02\x02\u0199", "\u019A\x071\x02\x02\u019A\u019B\x071\x02\x02\u019B\x84", "\x03\x02\x02\x02\u019C\u019D\x07\x80\x02\x02\u019D\x86", "\x03\x02\x02\x02\u019E\u019F\x07b\x02\x02\u019F\x88", "\x03\x02\x02\x02\u01A0\u01A1\x07e\x02\x02\u01A1\u01A2", "\x07n\x02\x02\u01A2\u01A3\x07c\x02\x02\u01A3\u01A4\x07", "u\x02\x02\u01A4\u01A5\x07u\x02\x02\u01A5\x8A\x03\x02", "\x02\x02\u01A6\u01A7\x07{\x02\x02\u01A7\u01A8\x07k\x02", "\x02\u01A8\u01A9\x07g\x02\x02\u01A9\u01AA\x07n\x02\x02", "\u01AA\u01AB\x07f\x02\x02\u01AB\x8C\x03\x02\x02\x02", "\u01AC\u01B0\t\x02\x02\x02\u01AD\u01AF\t\x03\x02\x02\u01AE", "\u01AD\x03\x02\x02\x02\u01AF\u01B2\x03\x02\x02\x02\u01B0", "\u01AE\x03\x02\x02\x02\u01B0\u01B1\x03\x02\x02\x02\u01B1", "\x8E\x03\x02\x02\x02\u01B2\u01B0\x03\x02\x02\x02\u01B3", "\u01D8\x072\x02\x02\u01B4\u01B6\t\x04\x02\x02\u01B5\u01B7", "\t\x05\x02\x02\u01B6\u01B5\x03\x02\x02\x02\u01B7\u01B8", "\x03\x02\x02\x02\u01B8\u01B6\x03\x02\x02\x02\u01B8\u01B9", "\x03\x02\x02\x02\u01B9\u01C4\x03\x02\x02\x02\u01BA\u01C5", "\t\x06\x02\x02\u01BB\u01BD\t\x07\x02\x02\u01BC\u01BE\t\b", "\x02\x02\u01BD\u01BC\x03\x02\x02\x02\u01BD\u01BE\x03\x02", "\x02\x02\u01BE\u01C0\x03\x02\x02\x02\u01BF\u01C1\t\t\x02", "\x02\u01C0\u01BF\x03\x02\x02\x02\u01C1\u01C2\x03\x02\x02", "\x02\u01C2\u01C0\x03\x02\x02\x02\u01C2\u01C3\x03\x02\x02", "\x02\u01C3\u01C5\x03\x02\x02\x02\u01C4\u01BA\x03\x02\x02", "\x02\u01C4\u01BB\x03\x02\x02\x02\u01C4\u01C5\x03\x02\x02", "\x02\u01C5\u01D9\x03\x02\x02\x02\u01C6\u01C8\t\n\x02\x02", "\u01C7\u01C9\t\x0B\x02\x02\u01C8\u01C7\x03\x02\x02\x02", "\u01C9\u01CA\x03\x02\x02\x02\u01CA\u01C8\x03\x02\x02\x02", "\u01CA\u01CB\x03\x02\x02\x02\u01CB\u01CD\x03\x02\x02\x02", "\u01CC\u01CE\t\x06\x02\x02\u01CD\u01CC\x03\x02\x02\x02", "\u01CD\u01CE\x03\x02\x02\x02\u01CE\u01D9\x03\x02\x02\x02", "\u01CF\u01D1\t\f\x02\x02\u01D0\u01D2\t\r\x02\x02\u01D1\u01D0", "\x03\x02\x02\x02\u01D2\u01D3\x03\x02\x02\x02\u01D3\u01D1", "\x03\x02\x02\x02\u01D3\u01D4\x03\x02\x02\x02\u01D4\u01D6", "\x03\x02\x02\x02\u01D5\u01D7\t\x06\x02\x02\u01D6\u01D5", "\x03\x02\x02\x02\u01D6\u01D7\x03\x02\x02\x02\u01D7\u01D9", "\x03\x02\x02\x02\u01D8\u01B4\x03\x02\x02\x02\u01D8\u01C6", "\x03\x02\x02\x02\u01D8\u01CF\x03\x02\x02\x02\u01D9\u0212", "\x03\x02\x02\x02\u01DA\u01DC\t\t\x02\x02\u01DB\u01DA\x03", "\x02\x02\x02\u01DC\u01DD\x03\x02\x02\x02\u01DD\u01DB\x03", "\x02\x02\x02\u01DD\u01DE\x03\x02\x02\x02\u01DE\u01DF\x03", "\x02\x02\x02\u01DF\u01E3\x070\x02\x02\u01E0\u01E2\t\t\x02", "\x02\u01E1\u01E0\x03\x02\x02\x02\u01E2\u01E5\x03\x02\x02", "\x02\u01E3\u01E1\x03\x02\x02\x02\u01E3\u01E4\x03\x02\x02", "\x02\u01E4\u01ED\x03\x02\x02\x02\u01E5\u01E3\x03\x02\x02", "\x02\u01E6\u01E8\x070\x02\x02\u01E7\u01E9\t\t\x02\x02\u01E8", "\u01E7\x03\x02\x02\x02\u01E9\u01EA\x03\x02\x02\x02\u01EA", "\u01E8\x03\x02\x02\x02\u01EA\u01EB\x03\x02\x02\x02\u01EB", "\u01ED\x03\x02\x02\x02\u01EC\u01DB\x03\x02\x02\x02\u01EC", "\u01E6\x03\x02\x02\x02\u01ED\u01F7\x03\x02\x02\x02\u01EE", "\u01F0\t\x07\x02\x02\u01EF\u01F1\t\b\x02\x02\u01F0\u01EF\x03", "\x02\x02\x02\u01F0\u01F1\x03\x02\x02\x02\u01F1\u01F3\x03", "\x02\x02\x02\u01F2\u01F4\t\t\x02\x02\u01F3\u01F2\x03\x02", "\x02\x02\u01F4\u01F5\x03\x02\x02\x02\u01F5\u01F3\x03\x02", "\x02\x02\u01F5\u01F6\x03\x02\x02\x02\u01F6\u01F8\x03\x02", "\x02\x02\u01F7\u01EE\x03\x02\x02\x02\u01F7\u01F8\x03\x02", "\x02\x02\u01F8\u01FA\x03\x02\x02\x02\u01F9\u01FB\t\x0E", "\x02\x02\u01FA\u01F9\x03\x02\x02\x02\u01FA\u01FB\x03\x02", "\x02\x02\u01FB\u0212\x03\x02\x02\x02\u01FC\u01FE\t\t\x02", "\x02\u01FD\u01FC\x03\x02\x02\x02\u01FE\u01FF\x03\x02\x02", "\x02\u01FF\u01FD\x03\x02\x02\x02\u01FF\u0200\x03\x02\x02", "\x02\u0200\u020F\x03\x02\x02\x02\u0201\u0210\t\x06\x02", "\x02\u0202\u0204\t\x07\x02\x02\u0203\u0205\t\b\x02\x02\u0204", "\u0203\x03\x02\x02\x02\u0204\u0205\x03\x02\x02\x02\u0205", "\u0207\x03\x02\x02\x02\u0206\u0208\t\t\x02\x02\u0207\u0206", "\x03\x02\x02\x02\u0208\u0209\x03\x02\x02\x02\u0209\u0207", "\x03\x02\x02\x02\u0209\u020A\x03\x02\x02\x02\u020A\u020C", "\x03\x02\x02\x02\u020B\u020D\t\x0E\x02\x02\u020C\u020B", "\x03\x02\x02\x02\u020C\u020D\x03\x02\x02\x02\u020D\u0210", "\x03\x02\x02\x02\u020E\u0210\t\x0E\x02\x02\u020F\u0201", "\x03\x02\x02\x02\u020F\u0202\x03\x02\x02\x02\u020F\u020E", "\x03\x02\x02\x02\u020F\u0210\x03\x02\x02\x02\u0210\u0212", "\x03\x02\x02\x02\u0211\u01B3\x03\x02\x02\x02\u0211\u01EC", "\x03\x02\x02\x02\u0211\u01FD\x03\x02\x02\x02\u0212\x90", "\x03\x02\x02\x02\u0213\u0215\t\x0F\x02\x02\u0214\u0213", "\x03\x02\x02\x02\u0214\u0215\x03\x02\x02\x02\u0215\u0217", "\x03\x02\x02\x02\u0216\u0218\t\x10\x02\x02\u0217\u0216", "\x03\x02\x02\x02\u0217\u0218\x03\x02\x02\x02\u0218\u0220", "\x03\x02\x02\x02\u0219\u021B\t\x10\x02\x02\u021A\u0219", "\x03\x02\x02\x02\u021A\u021B\x03\x02\x02\x02\u021B\u021D", "\x03\x02\x02\x02\u021C\u021E\t\x0F\x02\x02\u021D\u021C", "\x03\x02\x02\x02\u021D\u021E\x03\x02\x02\x02\u021E\u0220", "\x03\x02\x02\x02\u021F\u0214\x03\x02\x02\x02\u021F\u021A", "\x03\x02\x02\x02\u0220\u026D\x03\x02\x02\x02\u0221\u0234", "\x07)\x02\x02\u0222\u022F\x07^\x02\x02\u0223\u0225\t\x11", "\x02\x02\u0224\u0223\x03\x02\x02\x02\u0225\u0226\x03\x02", "\x02\x02\u0226\u0224\x03\x02\x02\x02\u0226\u0227\x03\x02", "\x02\x02\u0227\u022C\x03\x02\x02\x02\u0228\u022A\x07\x0F", "\x02\x02\u0229\u0228\x03\x02\x02\x02\u0229\u022A\x03\x02", "\x02\x02\u022A\u022B\x03\x02\x02\x02\u022B\u022D\x07\f", "\x02\x02\u022C\u0229\x03\x02\x02\x02\u022C\u022D\x03\x02", "\x02\x02\u022D\u0230\x03\x02\x02\x02\u022E\u0230\x0B\x02", "\x02\x02\u022F\u0224\x03\x02\x02\x02\u022F\u022E\x03\x02", "\x02\x02\u0230\u0233\x03\x02\x02\x02\u0231\u0233\n\x12", "\x02\x02\u0232\u0222\x03\x02\x02\x02\u0232\u0231\x03\x02", "\x02\x02\u0233\u0236\x03\x02\x02\x02\u0234\u0232\x03\x02", "\x02\x02\u0234\u0235\x03\x02\x02\x02\u0235\u0237\x03\x02", "\x02\x02\u0236\u0234\x03\x02\x02\x02\u0237\u026E\x07)", "\x02\x02\u0238\u024B\x07$\x02\x02\u0239\u0246\x07^\x02", "\x02\u023A\u023C\t\x11\x02\x02\u023B\u023A\x03\x02\x02", "\x02\u023C\u023D\x03\x02\x02\x02\u023D\u023B\x03\x02\x02", "\x02\u023D\u023E\x03\x02\x02\x02\u023E\u0243\x03\x02\x02", "\x02\u023F\u0241\x07\x0F\x02\x02\u0240\u023F\x03\x02\x02", "\x02\u0240\u0241\x03\x02\x02\x02\u0241\u0242\x03\x02\x02", "\x02\u0242\u0244\x07\f\x02\x02\u0243\u0240\x03\x02\x02", "\x02\u0243\u0244\x03\x02\x02\x02\u0244\u0247\x03\x02\x02", "\x02\u0245\u0247\x0B\x02\x02\x02\u0246\u023B\x03\x02\x02", "\x02\u0246\u0245\x03\x02\x02\x02\u0247\u024A\x03\x02\x02", "\x02\u0248\u024A\n\x13\x02\x02\u0249\u0239\x03\x02\x02", "\x02\u0249\u0248\x03\x02\x02\x02\u024A\u024D\x03\x02\x02", "\x02\u024B\u0249\x03\x02\x02\x02\u024B\u024C\x03\x02\x02", "\x02\u024C\u024E\x03\x02\x02\x02\u024D\u024B\x03\x02\x02", "\x02\u024E\u026E\x07$\x02\x02\u024F\u0250\x07$\x02\x02", "\u0250\u0251\x07$\x02\x02\u0251\u0252\x07$\x02\x02\u0252", "\u0258\x03\x02\x02\x02\u0253\u0254\x07^\x02\x02\u0254", "\u0257\x0B\x02\x02\x02\u0255\u0257\n\x14\x02\x02\u0256", "\u0253\x03\x02\x02\x02\u0256\u0255\x03\x02\x02\x02\u0257", "\u025A\x03\x02\x02\x02\u0258\u0259\x03\x02\x02\x02\u0258", "\u0256\x03\x02\x02\x02\u0259\u025B\x03\x02\x02\x02\u025A", "\u0258\x03\x02\x02\x02\u025B\u025C\x07$\x02\x02\u025C", "\u025D\x07$\x02\x02\u025D\u026E\x07$\x02\x02\u025E\u025F", "\x07)\x02\x02\u025F\u0260\x07)\x02\x02\u0260\u0261\x07", ")\x02\x02\u0261\u0267\x03\x02\x02\x02\u0262\u0263\x07", "^\x02\x02\u0263\u0266\x0B\x02\x02\x02\u0264\u0266\n\x14", "\x02\x02\u0265\u0262\x03\x02\x02\x02\u0265\u0264\x03\x02", "\x02\x02\u0266\u0269\x03\x02\x02\x02\u0267\u0268\x03\x02", "\x02\x02\u0267\u0265\x03\x02\x02\x02\u0268\u026A\x03\x02", "\x02\x02\u0269\u0267\x03\x02\x02\x02\u026A\u026B\x07)", "\x02\x02\u026B\u026C\x07)\x02\x02\u026C\u026E\x07)\x02", "\x02\u026D\u0221\x03\x02\x02\x02\u026D\u0238\x03\x02\x02", "\x02\u026D\u024F\x03\x02\x02\x02\u026D\u025E\x03\x02\x02", "\x02\u026E\x92\x03\x02\x02\x02\u026F\u0271\x07\x0F\x02", "\x02\u0270\u026F\x03\x02\x02\x02\u0270\u0271\x03\x02\x02", "\x02\u0271\u0272\x03\x02\x02\x02\u0272\u0274\x07\f\x02", "\x02\u0273\u0270\x03\x02\x02\x02\u0274\u0275\x03\x02\x02", "\x02\u0275\u0273\x03\x02\x02\x02\u0275\u0276\x03\x02\x02", "\x02\u0276\u0277\x03\x02\x02\x02\u0277\u0286\bJ\x02\x02", "\u0278\u027C\x07^\x02\x02\u0279\u027B\t\x11\x02\x02\u027A", "\u0279\x03\x02\x02\x02\u027B\u027E\x03\x02\x02\x02\u027C", "\u027A\x03\x02\x02\x02\u027C\u027D\x03\x02\x02\x02\u027D", "\u0280\x03\x02\x02\x02\u027E\u027C\x03\x02\x02\x02\u027F", "\u0281\x07\x0F\x02\x02\u0280\u027F\x03\x02\x02\x02\u0280", "\u0281\x03\x02\x02\x02\u0281\u0282\x03\x02\x02\x02\u0282", "\u0283\x07\f\x02\x02\u0283\u0284\x03\x02\x02\x02\u0284", "\u0286\bJ\x03\x02\u0285\u0273\x03\x02\x02\x02\u0285\u0278", "\x03\x02\x02\x02\u0286\u0287\x03\x02\x02\x02\u0287\u0288", "\bJ\x04\x02\u0288\u0289\x03\x02\x02\x02\u0289\u028A\bJ\x05", "\x02\u028A\x94\x03\x02\x02\x02\u028B\u028D\t\x11\x02", "\x02\u028C\u028B\x03\x02\x02\x02\u028D\u028E\x03\x02\x02", "\x02\u028E\u028C\x03\x02\x02\x02\u028E\u028F\x03\x02\x02", "\x02\u028F\u0290\x03\x02\x02\x02\u0290\u0291\bK\x06\x02", "\u0291\u0292\x03\x02\x02\x02\u0292\u0293\bK\x05\x02\u0293", "\x96\x03\x02\x02\x02\u0294\u0298\x07%\x02\x02\u0295", "\u0297\n\x15\x02\x02\u0296\u0295\x03\x02\x02\x02\u0297", "\u029A\x03\x02\x02\x02\u0298\u0296\x03\x02\x02\x02\u0298", "\u0299\x03\x02\x02\x02\u0299\u029B\x03\x02\x02\x02\u029A", "\u0298\x03\x02\x02\x02\u029B\u029C\bL\x07\x02\u029C\x98", "\x03\x02\x02\x02\u029D\u029E\x07*\x02\x02\u029E\u029F", "\bM\b\x02\u029F\x9A\x03\x02\x02\x02\u02A0\u02A1\x07+\x02", "\x02\u02A1\u02A2\bN\t\x02\u02A2\x9C\x03\x02\x02\x02\u02A3", "\u02A4\x07}\x02\x02\u02A4\u02A5\bO\n\x02\u02A5\x9E\x03\x02", "\x02\x02\u02A6\u02A7\x07\x7F\x02\x02\u02A7\u02A8\bP\x0B", "\x02\u02A8\xA0\x03\x02\x02\x02\u02A9\u02AA\x07]\x02", "\x02\u02AA\u02AB\bQ\f\x02\u02AB\xA2\x03\x02\x02\x02\u02AC", "\u02AD\x07_\x02\x02\u02AD\u02AE\bR\r\x02\u02AE\xA4\x03\x02", "\x02\x02\u02AF\u02B0\x0B\x02\x02\x02\u02B0\u02B1\x03\x02", "\x02\x02\u02B1\u02B2\bS\x07\x02\u02B2\xA6\x03\x02\x02", "\x028\x02\u01B0\u01B8\u01BD\u01C2\u01C4\u01CA\u01CD\u01D3\u01D6", "\u01D8\u01DD\u01E3\u01EA\u01EC\u01F0\u01F5\u01F7\u01FA\u01FF\u0204\u0209", "\u020C\u020F\u0211\u0214\u0217\u021A\u021D\u021F\u0226\u0229\u022C\u022F", "\u0232\u0234\u023D\u0240\u0243\u0246\u0249\u024B\u0256\u0258\u0265\u0267", "\u026D\u0270\u0275\u027C\u0280\u0285\u028E\u0298\x0E\x03J\x02", "\x03J\x03\x03J\x04\x02\x03\x02\x03K\x05\b\x02\x02", "\x03M\x06\x03N\x07\x03O\b\x03P\t\x03Q\n\x03R\x0B"].join("");
var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);
var decisionsToDFA = atn.decisionToState.map(function (ds, index) {
  return new antlr4.dfa.DFA(ds, index);
});
function Python2Lexer(input) {
  antlr4.Lexer.call(this, input);
  this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
  return this;
}
Python2Lexer.prototype = Object.create(antlr4.Lexer.prototype);
Python2Lexer.prototype.constructor = Python2Lexer;
Object.defineProperty(Python2Lexer.prototype, "atn", {
  get: function get() {
    return atn;
  }
});
Python2Lexer.EOF = antlr4.Token.EOF;
Python2Lexer.T__0 = 1;
Python2Lexer.T__1 = 2;
Python2Lexer.T__2 = 3;
Python2Lexer.T__3 = 4;
Python2Lexer.T__4 = 5;
Python2Lexer.T__5 = 6;
Python2Lexer.T__6 = 7;
Python2Lexer.T__7 = 8;
Python2Lexer.T__8 = 9;
Python2Lexer.T__9 = 10;
Python2Lexer.T__10 = 11;
Python2Lexer.T__11 = 12;
Python2Lexer.T__12 = 13;
Python2Lexer.T__13 = 14;
Python2Lexer.T__14 = 15;
Python2Lexer.T__15 = 16;
Python2Lexer.T__16 = 17;
Python2Lexer.T__17 = 18;
Python2Lexer.T__18 = 19;
Python2Lexer.T__19 = 20;
Python2Lexer.T__20 = 21;
Python2Lexer.T__21 = 22;
Python2Lexer.T__22 = 23;
Python2Lexer.T__23 = 24;
Python2Lexer.T__24 = 25;
Python2Lexer.T__25 = 26;
Python2Lexer.T__26 = 27;
Python2Lexer.T__27 = 28;
Python2Lexer.T__28 = 29;
Python2Lexer.T__29 = 30;
Python2Lexer.T__30 = 31;
Python2Lexer.T__31 = 32;
Python2Lexer.T__32 = 33;
Python2Lexer.T__33 = 34;
Python2Lexer.T__34 = 35;
Python2Lexer.T__35 = 36;
Python2Lexer.T__36 = 37;
Python2Lexer.T__37 = 38;
Python2Lexer.T__38 = 39;
Python2Lexer.T__39 = 40;
Python2Lexer.T__40 = 41;
Python2Lexer.T__41 = 42;
Python2Lexer.T__42 = 43;
Python2Lexer.T__43 = 44;
Python2Lexer.T__44 = 45;
Python2Lexer.T__45 = 46;
Python2Lexer.T__46 = 47;
Python2Lexer.T__47 = 48;
Python2Lexer.T__48 = 49;
Python2Lexer.T__49 = 50;
Python2Lexer.T__50 = 51;
Python2Lexer.T__51 = 52;
Python2Lexer.T__52 = 53;
Python2Lexer.T__53 = 54;
Python2Lexer.T__54 = 55;
Python2Lexer.T__55 = 56;
Python2Lexer.T__56 = 57;
Python2Lexer.T__57 = 58;
Python2Lexer.T__58 = 59;
Python2Lexer.T__59 = 60;
Python2Lexer.T__60 = 61;
Python2Lexer.T__61 = 62;
Python2Lexer.T__62 = 63;
Python2Lexer.T__63 = 64;
Python2Lexer.T__64 = 65;
Python2Lexer.T__65 = 66;
Python2Lexer.T__66 = 67;
Python2Lexer.T__67 = 68;
Python2Lexer.T__68 = 69;
Python2Lexer.NAME = 70;
Python2Lexer.NUMBER = 71;
Python2Lexer.STRING = 72;
Python2Lexer.LINENDING = 73;
Python2Lexer.WHITESPACE = 74;
Python2Lexer.COMMENT = 75;
Python2Lexer.OPEN_PAREN = 76;
Python2Lexer.CLOSE_PAREN = 77;
Python2Lexer.OPEN_BRACE = 78;
Python2Lexer.CLOSE_BRACE = 79;
Python2Lexer.OPEN_BRACKET = 80;
Python2Lexer.CLOSE_BRACKET = 81;
Python2Lexer.UNKNOWN = 82;
Python2Lexer.prototype.channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];
Python2Lexer.prototype.modeNames = ["DEFAULT_MODE"];
Python2Lexer.prototype.literalNames = [null, "'@'", "'def'", "':'", "'='", "','", "'*'", "'**'", "';'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'**='", "'//='", "'>>'", "'del'", "'pass'", "'break'", "'continue'", "'return'", "'raise'", "'import'", "'from'", "'.'", "'as'", "'global'", "'exec'", "'in'", "'assert'", "'if'", "'elif'", "'else'", "'while'", "'for'", "'try'", "'finally'", "'with'", "'except'", "'lambda'", "'or'", "'and'", "'not'", "'<'", "'>'", "'=='", "'>='", "'<='", "'<>'", "'!='", "'is'", "'|'", "'^'", "'&'", "'<<'", "'+'", "'-'", "'/'", "'%'", "'//'", "'~'", "'`'", "'class'", "'yield'", null, null, null, null, null, null, "'('", "')'", "'{'", "'}'", "'['", "']'"];
Python2Lexer.prototype.symbolicNames = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "NAME", "NUMBER", "STRING", "LINENDING", "WHITESPACE", "COMMENT", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_BRACKET", "CLOSE_BRACKET", "UNKNOWN"];
Python2Lexer.prototype.ruleNames = ["T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", "T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", "T__65", "T__66", "T__67", "T__68", "NAME", "NUMBER", "STRING", "LINENDING", "WHITESPACE", "COMMENT", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_BRACKET", "CLOSE_BRACKET", "UNKNOWN"];
Python2Lexer.prototype.grammarFileName = "Python2.g4";
var old_lexer = Python2Lexer;
Python2Lexer = function Python2Lexer() {
  old_lexer.apply(this, arguments);
  this._openBRCount = 0;
  this._suppressNewlines = false;
  this._lineContinuation = false;
  this._tokens = new TokenQueue();
  this._indents = new IndentStack();
  antlr4.Lexer.prototype.reset.call(this);
};
Python2Lexer.prototype = Object.create(old_lexer.prototype);
Python2Lexer.prototype.constructor = Python2Lexer;
Python2Lexer.prototype.nextToken = function () {
  if (!this._tokens.empty()) {
    return this._tokens.deq();
  } else {
    var t = antlr4.Lexer.prototype.nextToken.call(this);
    if (t.type !== Python2Parser.EOF) return t;else {
      if (!this._suppressNewlines) {
        this.emitNewline();
      }
      this.emitFullDedent();
      this.emitEndmarker();
      this.emitEndToken(t);
      return this._tokens.deq();
    }
  }
};
Python2Lexer.prototype.emitEndToken = function (token) {
  this._tokens.enq(token);
};
Python2Lexer.prototype.emitIndent = function (length, text) {
  if (length === void 0) {
    length = 0;
  }
  if (text === void 0) {
    text = 'INDENT';
  }
  var t = this.createToken(Python2Parser.INDENT, text, length);
  this._tokens.enq(t);
};
Python2Lexer.prototype.emitDedent = function () {
  var t = this.createToken(Python2Parser.DEDENT, 'DEDENT');
  this._tokens.enq(t);
};
Python2Lexer.prototype.emitFullDedent = function () {
  while (!this._indents.empty()) {
    this._indents.pop();
    this.emitDedent();
  }
};
Python2Lexer.prototype.emitEndmarker = function () {
  var t = this.createToken(Python2Parser.ENDMARKER, 'ENDMARKER');
  this._tokens.enq(t);
};
Python2Lexer.prototype.emitNewline = function () {
  var t = this.createToken(Python2Parser.NEWLINE, 'NEWLINE');
  this._tokens.enq(t);
};
Python2Lexer.prototype.createToken = function (type_, text, length) {
  if (text === void 0) {
    text = "";
  }
  if (length === void 0) {
    length = 0;
  }
  var start = this._tokenStartCharIndex;
  var stop = start + length;
  var t = new CommonToken(this._tokenFactorySourcePair, type_, this.DEFAULT_TOKEN_CHANNEL, start, stop);
  t.text = text;
  return t;
};
Python2Lexer.prototype.action = function (localctx, ruleIndex, actionIndex) {
  switch (ruleIndex) {
    case 72:
      this.LINENDING_action(localctx, actionIndex);
      break;
    case 73:
      this.WHITESPACE_action(localctx, actionIndex);
      break;
    case 75:
      this.OPEN_PAREN_action(localctx, actionIndex);
      break;
    case 76:
      this.CLOSE_PAREN_action(localctx, actionIndex);
      break;
    case 77:
      this.OPEN_BRACE_action(localctx, actionIndex);
      break;
    case 78:
      this.CLOSE_BRACE_action(localctx, actionIndex);
      break;
    case 79:
      this.OPEN_BRACKET_action(localctx, actionIndex);
      break;
    case 80:
      this.CLOSE_BRACKET_action(localctx, actionIndex);
      break;
    default:
      throw "No registered action for:" + ruleIndex;
  }
};
Python2Lexer.prototype.LINENDING_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 0:
      this._lineContinuation = false;
      break;
    case 1:
      this._lineContinuation = true;
      break;
    case 2:
      if (this._openBRCount == 0 && !this._lineContinuation) {
        if (!this._suppressNewlines) {
          this.emitNewline();
          this._suppressNewlines = true;
        }
        var la = this._input.LA(1);
        if ([ord(' '), ord('\t'), ord('#')].indexOf(la) === -1) {
          this._suppressNewlines = false;
          this.emitFullDedent();
        }
      }
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
Python2Lexer.prototype.WHITESPACE_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 3:
      if (this._tokenStartColumn == 0 && this._openBRCount == 0 && !this._lineContinuation) {
        var la = this._input.LA(1);
        if ([ord('\r'), ord('\n'), ord('#'), -1].indexOf(la) === -1) this._suppressNewlines = false;
        var wsCount = 0;
        for (var ch in this.text) {
          ch = this.text[ch];
          if (ch == ' ') wsCount += 1;else if (ch == '\t') wsCount += 8;
        }
        if (wsCount > this._indents.wsval()) {
          this.emitIndent(this.text.length);
          this._indents.push(wsCount);
        } else {
          while (wsCount < this._indents.wsval()) {
            this.emitDedent();
            this._indents.pop();
          }
          if (wsCount != this._indents.wsval()) {
            // throw new Error('wsCount')
          }
        }
      }
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
Python2Lexer.prototype.OPEN_PAREN_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 4:
      this._openBRCount += 1;
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
Python2Lexer.prototype.CLOSE_PAREN_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 5:
      this._openBRCount -= 1;
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
Python2Lexer.prototype.OPEN_BRACE_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 6:
      this._openBRCount += 1;
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
Python2Lexer.prototype.CLOSE_BRACE_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 7:
      this._openBRCount -= 1;
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
Python2Lexer.prototype.OPEN_BRACKET_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 8:
      this._openBRCount += 1;
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
Python2Lexer.prototype.CLOSE_BRACKET_action = function (localctx, actionIndex) {
  switch (actionIndex) {
    case 9:
      this._openBRCount -= 1;
      break;
    default:
      throw "No registered action for:" + actionIndex;
  }
};
exports.Python2Lexer = Python2Lexer;